Learning Linux command line
===========================
Get training files: git clone git://github.com/scottsimpson/commandlinebasics

History of Linux
----------------
Released by Linus Torvalds in 1991 (based on Unix/Minix)

Philosophy(UNIX): 
- programs should do one thing
- use text interfaces (take in text and output text)
- many modular tools instead of one big one
- GNU tools commit to this pattern

Ubuntu
------
Install extra codecs for playing videos:
  sudo apt-get install ubuntu-restricted-extras

Removed files?
-------------
After a rm files are gone.
If you however remove files via the Files explorer in Ubuntu you can go to
~/.local/share/Trash/files   to find/restore the deleted files :)
In ~/.local/share/Trash/info you see exactly the original location and when it was removed.

Terminal
--------
ctrl + alt + t = open terminal
ctrl + shift + +  = increase font size terminal
ctrl + -  = decrease font size terminal
ctrl + a = move to begin of line

Bash
----
File info: file <filename>, stat <filename>

cd ~ or just cd: go to home folder
cd - : go to previous used folder

Creating and removing directories:
mkdir <folder>   -p for recursing
rmdir <folder>

Copy file       : cp <orgfile> <destfile>
Move/rename file: mv <orgfile> <destfile>
Remove file     : rm <file> or rm -rf <directory/ies> to remove everything recursively
 (-f skips the prompt for each folder that is beeing removed)
. = current dir, .. = parent dir
wildcards: * = multiple chars, ? = one char

finding files
-------------
find <location> -name <search pattern>

users
-----
sudo <command> : do things as root temporarily
sudo -s : login as root user
exit    : go back to normal user
sudo !! : repeat last command as root user (if you forgot to type sudo ..)

change file access:/rights:
chmod <user priv digit><group priv digit><other priv digit>
read = 4, write = 2, execute = 1
x=1, w=2, xw=3, r=4, xr=5, rw=6, xrw=7
Example: chmod 664 poems.txt means:
- user:rw, group:rw, others: r only
Also possible notation with +, - and = for user, group, others or all.
chmod 777 = a+rwx              full access for everyone
chmod 755 = u+rwx,g=rx,o=rx    owners full access, group only rx, others only rx
chmod 700 = u=rwx,g-rwx,o-rwx  owners full access, rest none

change ownership: sudo chown <new owner> <file>
change group    : sudo chgrp <new owner> <file>

Links
-----
Dont use ~ for home, but /home/<user>
So: ~/Documents = /home/djdegoed/Documents

- hard link : point to data on the disk (inodes)
    ln <file to link to>
    This will create a pointer to the same hard file location / inode
- soft (symbolic) link : points to a file on the disk (relative path)
	ln -s <file to link to> <link file name>
	- ln -s poems.txt writing.txt                : symlink will break when moved
	- ln -s /home/djdegoed/poems.txt writing.txt : symlink will still work when moved
	
Standard locations
------------------
/ = highest level (root)
  /root = root home dir
  /home = user home folders
  /bin = binaries (programs)
  /sbin = binaries (programs)
  /etc = config files
  /lib = libraries and shared modules
  /dev = devices on the system
  /mnt = local and remote filesystem mounts
  /media = removable storage
  /proc = virtual filesystem representing processes
  /sys = virtual filesystem representing kernel values
  
Pipes
-----
cat <file> | wc : count the lines, words and characters in <file>
head -n<x> <file>: show first x lines
tail -n<x> <file>: show last x lines

cat <file> | cat -n : show file with line nrs

Check difference between:
cat <file> | cat -n | tail n<x>  : show file, nr the lines and show last x lines
cat <file> | tail n<x> | cat -n  : show file, show last x lines and nr them

View text files
---------------
<file> less/more : show page of text, use PgUp, PgDown, arrow up/down to scroll
                   Use q to quit (same as man)

Edit text files
---------------
For easy editing use gedit (graphical shell)
For CLI editors use: vi(m) or nano

Grep (search in files)
----
grep -n "<pattern/string>" <file> : search for pattern/string and output the results with line nrs
-i : case insensative
-v : show file without the lines that contain the pattern/string

grep -E "\w{6,}" <file> : search for all lines with words with length 6 or more
grep -E "[hjk]" <file> : search for all lines where there is an h,j or k in it

Manipulating text
-----------------
- awk for extracting data

    awk '{print $2}' simple_data.txt  : show second column of this file
    awk '{print $2 "\t" $1}' simple_data.txt : show 2nd column then tab then 1st column

- sed for changing data

    sed  "s/Orange/Red/" simple_data.txt : change word Orange in Red in file
      (s = substitute)
    
    sed -i 's/foo/bar/g' hello.txt
      Replace text (foo by bar) in file hello.txt without editing it / from the CLI
      (-i = replace in file, s/ = substitute, /g = for all found values)
    
- sort for sorting data
  
    sort -k2 -n simple_data.txt : sort file on 2nd column numeric
    sort -u simple_data.txt : show unique lines
        
- rev for reversing text
    echo Hello | rev  gives: olleH
    
- tac for reversing lines in a file (cat reversed ;-))
    cat words.txt | tac
    
Vi/ViM
------
to install: sudo apt install vim
After start press i to go to insert mode, esc to go back to command mode
in command mode:  :w <filename> to save file
:qw    : save changes and quit
:q!    : exit without saving changes

[[ / ]] = jump to begin of text / end of text
( = beginning of previous sentence
) = beginning of next sentence

Working with archives
---------------------
.tar files are a common way to package and distribute software.
They put many files into one file

With or without compression:
.tar             = normal
.tar.gz or .tgz  = with gzip compression
.tar.bz2         = with bzip compression

Create an uncompressed archive and output the added files:
  tar cvf myfiles.tar Exercise\ Files
    (c = create archive, v = verbose: show files added, f = output to a file)

  tar caf myfiles.tar.gz Exercise\ Files
    (a = choose compression based on extension of file, here .gz will use gzip;
     we left out option v here as we do not need to show the added files always)

Unpack files in local dir:    
  tar xf <file>
  
Unpack files to specific dir:
  tar xf <file> -C <target folder>



