Info about WSL:

User management
---------------
Login as root with:  sudo -i
Logoff as root user:  exit
Change user: su <user name>
Change root password (in WSL distro): sudo passwd  (then supply and retype new password)
Edit file with users that can use sudo:  nano /etc/sudoers

Using bash
----------
- Editing
    editors: vi, nano
    You can also use native windows tools: notepad.exe <filename>

    cmd as admin: sudo <command> and enter admin password

- bash settings in:
~/.bashrc    : your personal settings
/etc/profile
/bash.bashrc

Packages
--------
sudo apt update
sudo apt upgrade
sudo apt search <packege name>
sudo apt show <package name>
sudo apt list --installed    : show installed Packages
sudo apt list                : show all available Packages

Processes and services
----------------------
ps -ejH  : show all processes with tree in this "sandbox"
tasklist.exe : show all windows processes (no relation with your session)
tmux: open a new bash session and do something, you can close it
tmux attach: from the main shell you can run this to open up the previous closed session

service --status-all  : show all WSL services (+ = started, - = not started, ? = unknown)
service <service name> start/stop : start or stop a service
service <service name> status : check status of a service

Start a service automatically in WSL:
add 'service <service name> start' to your ~/.bashrc file

schedule tasks
--------------
crontab -e : edit your crontab file
sudo service cron start     : to start the cron service (scheduler)
sudo service rsyslog start  : to start the system logger
tail -f /var/log/syslog     : show the content of the syslog

Networking
----------
find ip address:  ip a
install and start network service:
sudo apt install nginx
sudo service nginx start
You can check by entering ip address or just 'localhost' in a browser, it should return a ngnix welcome message

Graphical env
-------------
1. Setup an X server (display manager) in Windows like VcXsrv. Run it with defaults but make private and public is set for firewall.
2. Tell WSL how to connect to the X server by setting the DISPLAY variable to be the nameserver + ':0'
    (nameserver = virtual address of hyper v server for this distro)
    export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0
    (put this in ~/.bashrc if you want this to be executed each time you start up this WSL distro)
3. Load up the changed .bashrc file:  source .bashrc
3. Install Linux pacage to support drawing GUI like x11-apps: 
    sudo apt install x11-apps
4. Now test it by running a graphical program like xeyes
    xeyes &    (& means it runs it as a separate process while the prompt is retained)
   You should now see a small windows with two eyes following the mouse pointer. Close that window to close the process.

Export and import WSL distribution
----------------------------------
In CMD:
Show existing distro's:  wsl --list
export:  wsl --export <distro name> <path + filename.tar>
        example: wsl --export Ubuntu d:\ubuntu.tar

import:  wsl --import <new distro name> <target path> <source path + file>
        example: wsl --import UbuntuCopy d:\LinuxImages d:\ubuntu.tar










